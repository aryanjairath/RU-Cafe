Index: src/main/java/projectfour/CoffeeView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package projectfour;\n\nimport javafx.application.Application;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\n\n/**\n * This class is the main method for tutition manager, which\n * sets up the GUI and runs it.\n * @author Anis Chihoub, Aryan Jairath\n */\npublic class CoffeeView extends Application {\n\n    /**\n     * This method runs the stage for the GUI\n     * @param stage a Stage object that has the necessary GUI components\n     * @throws IOException an IO exception indicating something is missing.\n     */\n    @Override\n    public void start(Stage stage) throws IOException {\n        FXMLLoader fxmlLoader = new FXMLLoader(\n                CoffeeView.class.getResource(\"CoffeeView.fxml\"));\n        Scene scene = new Scene(fxmlLoader.load(), 550,  600);\n        stage.setTitle(\"Coffee View\");\n        stage.setScene(scene);\n        stage.show();\n    }\n\n    /**\n     * This method runs launch to start the GUI.\n     * @param args an array of String.\n     */\n    public static void main(String[] args) {\n        launch();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/projectfour/CoffeeView.java b/src/main/java/projectfour/CoffeeView.java
--- a/src/main/java/projectfour/CoffeeView.java	(revision 4c3fdf2951f1ae87d8655257c9e83d23fc98d904)
+++ b/src/main/java/projectfour/CoffeeView.java	(date 1680581509598)
@@ -19,14 +19,20 @@
      * @param stage a Stage object that has the necessary GUI components
      * @throws IOException an IO exception indicating something is missing.
      */
-    @Override
+    //@Override
     public void start(Stage stage) throws IOException {
         FXMLLoader fxmlLoader = new FXMLLoader(
-                CoffeeView.class.getResource("CoffeeView.fxml"));
+               getClass().getResource("CoffeeView.fxml"));
         Scene scene = new Scene(fxmlLoader.load(), 550,  600);
         stage.setTitle("Coffee View");
         stage.setScene(scene);
         stage.show();
+        OrderingBasketView view2 = new OrderingBasketView();
+        FXMLLoader basketController = new FXMLLoader(
+                CoffeeView.class.getResource("OrderingBasketView.fxml"));
+        CoffeeViewController coffeeView = fxmlLoader.getController();
+        OrderingBasketController controller = basketController.getController();
+        coffeeView.setMainController(controller);
     }
 
     /**
Index: src/main/java/projectfour/MainViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package projectfour;\n\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.scene.control.DatePicker;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\n\n/**\n * This class is the controller for the main view where a user\n * can choose to order items, check their bag, and all store\n * orders\n * @author Aryan Jairath, Anis Chihoub\n */\npublic class MainViewController {\n\n    /**\n     * This method is executed when the order donuts button is pressed\n     * @throws IOException an IO exception indicating something is missing\n     */\n    @FXML\n    protected void onOrderDonut() throws IOException {\n        DonutView view = new DonutView();\n        view.start(new Stage());\n    }\n\n    /**\n     * This method is executed when the order coffee button is pressed\n     * @throws IOException an IO exception indicating something is missing\n     */\n    @FXML\n    protected void onOrderCoffee() throws IOException {\n        CoffeeView view = new CoffeeView();\n        view.start(new Stage());\n    }\n\n    /**\n     * This method is executed when the order basket button is pressed\n     * @throws IOException an IO exception indicating something is missing\n     */\n    @FXML\n    protected void onYourOrder() throws IOException {\n        OrderingBasketView view = new OrderingBasketView();\n        view.start(new Stage());\n    }\n\n    /**\n     * This method is executed when the store orders button is pressed\n     * @throws IOException an IO exception indicating something is missing\n     */\n    @FXML\n    protected void onAllOrders() throws IOException {\n        OrderMenuView view = new OrderMenuView();\n        view.start(new Stage());\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/projectfour/MainViewController.java b/src/main/java/projectfour/MainViewController.java
--- a/src/main/java/projectfour/MainViewController.java	(revision 4c3fdf2951f1ae87d8655257c9e83d23fc98d904)
+++ b/src/main/java/projectfour/MainViewController.java	(date 1680579859708)
@@ -32,6 +32,7 @@
      */
     @FXML
     protected void onOrderCoffee() throws IOException {
+        OrderingBasketView view2 = new OrderingBasketView();
         CoffeeView view = new CoffeeView();
         view.start(new Stage());
     }
Index: src/main/java/projectfour/CoffeeViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package projectfour;\n\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.*;\nimport javafx.scene.image.ImageView;\nimport java.text.DecimalFormat;\nimport java.util.ArrayList;\n\n/**\n * This class is the controller for the coffee view\n * and manages the responses to any GUI interactions\n * for the coffee view stage.\n * @author Anis Chihoub, Aryan Jariath\n */\npublic class CoffeeViewController {\n        ObservableList<String> donutList =\n                FXCollections.observableArrayList(\"Short\", \"Tall\", \"Grande\", \"Venti\");\n        ObservableList<Integer> quantityList =\n                FXCollections.observableArrayList(1, 2, 3, 4, 5);\n\n\n        ObservableList<String> addOnList =\n                FXCollections.observableArrayList(\"Sweet Cream\", \"French Vanilla\", \"Irish Cream\" +\n                        \"Caramel\", \"Mocha\");\n        ObservableList<String> coffee;\n\n        public static double total;\n        private static final int uniqueOrder = 0;\n        private static final int INITIALSELECT = 0;\n        private static final int DECIDIGITS = 0;\n\n\n        private Order order;\n\n        private static final int BEGININDEX = 0;\n\n        private static final int OFFSETINDEX = 1;\n\n        @FXML\n        private ComboBox comboBox;\n\n        @FXML\n        private ComboBox quantitycomboBox;\n\n        @FXML\n        private ListView flavors;\n\n        @FXML\n        private ListView result;\n\n        @FXML\n        private ImageView donutImage;\n\n        @FXML\n        private TextField runningTotal;\n\n        @FXML\n        private TextField orders;\n\n\n        @FXML\n        private CheckBox sweetCream;\n\n        @FXML\n        private CheckBox frenchVanilla;\n\n        @FXML\n        private CheckBox irishCream;\n\n\n        @FXML\n        private CheckBox caramelBox;\n\n        @FXML\n        private CheckBox mochaBox;\n\n        /**\n         * Constructor for the CoffeeViewController, which initializes several\n         * important instance variables.\n         */\n        public CoffeeViewController(){\n                comboBox = new ComboBox();\n                quantitycomboBox = new ComboBox();\n                result = new ListView();\n                total = 0;\n                coffee = FXCollections.observableArrayList();\n                order = new Order(uniqueOrder);\n                initialize();\n        }\n\n        /**\n         * Initializes the UI with given values.\n         */\n        @FXML\n        protected void initialize(){\n                comboBox.setValue(\"Coffee Size\");\n                comboBox.setItems(donutList);\n\n                quantitycomboBox.setValue(1);\n                quantitycomboBox.setItems(quantityList);\n\n                //flavors.setItems(yeastFlavors);\n        }\n\n        /**\n         * Gets the addons from the check boxes in the ui.\n         * @return an array list containing which addons were selected.\n         */\n\n        private ArrayList<String> getAddons(){\n                ArrayList<String> addList = new ArrayList<>();\n                if(sweetCream.isSelected()){\n                        addList.add(\"Sweet Cream\");\n                }\n\n                if(frenchVanilla.isSelected()){\n                        addList.add(\"French Vanilla\");\n\n                }\n\n                if(mochaBox.isSelected()){\n                        addList.add(\"Mocha\");\n                }\n\n                if(irishCream.isSelected()){\n                        addList.add(\"Irish Cream\");\n\n                }\n\n                if(caramelBox.isSelected()){\n                        addList.add(\"Caramel\");\n                }\n\n                return addList;\n        }\n\n\n        /**\n         * Checks if a given order can be added to the orders list\n         * @return a boolean indicating if the above is possible.\n         */\n\n        private boolean checkOrder(){\n                if(((String)comboBox.getSelectionModel().getSelectedItem()).equals(\n                        \"Coffee Size\")){\n                        return false;\n                }\n                return true;\n        }\n        /**\n         * Adds a coffee order, given parameters from the UI.\n         */\n\n        @FXML\n        protected void addCoffee(){\n                if(!checkOrder()){\n                        String errorMessage = \"Must select coffee size!\";\n                        Alert coffeeFailure = new Alert(Alert.AlertType.ERROR);\n                        coffeeFailure.setContentText(errorMessage);\n                        coffeeFailure.show();\n                        return;\n                }\n                String size = (String)comboBox.getSelectionModel().getSelectedItem();\n                Coffee coffeeOrder = new Coffee(size);\n                ArrayList<String> addOns = getAddons();\n                coffeeOrder.addaddIn(addOns);\n                int quantity = (int)quantitycomboBox.getSelectionModel().getSelectedItem();\n                coffee.add(size + \"(\" + quantity + \")\" + \" Addons: \\n\" +  addOns.toString()+ \".\");\n                result.setItems(coffee);\n                total += coffeeOrder.itemPrice()*quantity;\n                round();\n                runningTotal.setText(total + \"\");\n\n        }\n\n        /**\n         * This method checks if coffee object can be removed or not\n         * @return A boolean representing if coffee can be removed\n         */\n        private boolean canRemoveCoffee(){\n                if((String)result.getSelectionModel().getSelectedItem() == null){\n                        return false;\n                }\n                return true;\n        }\n\n        /**\n         * This method sets a certain total for a coffee order object\n         * @param tot A double representing the total value for\n         * a particular coffee order\n         */\n        public static void setTotal(double tot){\n                total = tot;\n        }\n\n\n        /**\n         * Removes a coffee order, given parameters from the UI.\n         */\n        @FXML\n        protected void removeCoffee(){\n                if(!canRemoveCoffee()){\n                        String errorMessage = \"Must select a valid coffee!\";\n                        Alert coffeeFailure = new Alert(Alert.AlertType.ERROR);\n                        coffeeFailure.setContentText(errorMessage);\n                        coffeeFailure.show();\n                        return;\n                }\n\n                String value = (String)result.getSelectionModel().getSelectedItem();\n                String sizeOfCoffee = value.substring(BEGININDEX,value.indexOf(\"(\"));\n                int quantity = Integer.parseInt(value.substring(value.indexOf(\"(\") + OFFSETINDEX,\n                        value.indexOf(\")\")));\n                String addOns = value.substring(value.indexOf(\"[\") + OFFSETINDEX,\n                        value.indexOf(\"]\"));\n                String[] addOnFromOrder = addOns.split(\",\");\n                Coffee tempCoffee = new Coffee(sizeOfCoffee);\n                ArrayList<String> addons = new ArrayList<String>();\n                for(int i = 0; i < addOnFromOrder.length; i++){\n                        addons.add(addOnFromOrder[i]);\n                }\n                tempCoffee.addaddIn(addons);\n                total -= (tempCoffee.itemPrice()) * quantity;\n                round();\n                runningTotal.setText(total +  \"\");\n                coffee.remove(value);\n        }\n\n\n        /**\n         * Adds an order, based on the UI parameters.\n         */\n        @FXML\n        protected void addOrder(){\n                if(!checkOrder()){\n                        String errorMessage = \"Must select a valid coffee!\";\n                        Alert coffeeFailure = new Alert(Alert.AlertType.ERROR);\n                        coffeeFailure.setContentText(errorMessage);\n                        coffeeFailure.show();\n                        return;\n                }\n\n                if(coffee.size() == BEGININDEX)\n                        return;\n                for(int i = 0; i < coffee.size(); i++) {\n                        String type = coffee.get(i);\n                        order.addItem(type);\n                }\n                System.out.println(DonutViewController.getTotal() + total);\n                order.setPrice(DonutViewController.getTotal() + total);\n                AllOrders.addOrder(order, uniqueOrder);\n                reset();\n        }\n\n        public static double getTotal(){\n                return total;\n        }\n\n        /**\n         * Resets parameters in the UI after an order is submitted.\n         */\n        private void reset(){\n                initialize();\n                order = new Order(uniqueOrder);\n                coffee = FXCollections.observableArrayList();\n                result.setItems(coffee);\n                quantitycomboBox.setValue(INITIALSELECT);\n                runningTotal.setText(\"\");\n                result.setItems(coffee);\n                irishCream.setSelected(false);\n                caramelBox.setSelected(false);\n                frenchVanilla.setSelected(false);\n                mochaBox.setSelected(false);\n                sweetCream.setSelected(false);\n        }\n\n        /**\n         * Rounds a decimal number to two digits.\n         */\n        private void round(){\n                DecimalFormat df = new DecimalFormat();\n                df.setMaximumFractionDigits(DECIDIGITS);\n                df.setMinimumFractionDigits(DECIDIGITS);\n                total = Double.parseDouble(df.format(total));\n        }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/projectfour/CoffeeViewController.java b/src/main/java/projectfour/CoffeeViewController.java
--- a/src/main/java/projectfour/CoffeeViewController.java	(revision 4c3fdf2951f1ae87d8655257c9e83d23fc98d904)
+++ b/src/main/java/projectfour/CoffeeViewController.java	(date 1680636211263)
@@ -38,6 +38,10 @@
 
         private static final int OFFSETINDEX = 1;
 
+
+        private OrderingBasketController mainController;
+
+
         @FXML
         private ComboBox comboBox;
 
@@ -76,6 +80,10 @@
         @FXML
         private CheckBox mochaBox;
 
+
+        public void setMainController(OrderingBasketController controller) {
+                this.mainController = controller;
+        }
         /**
          * Constructor for the CoffeeViewController, which initializes several
          * important instance variables.
@@ -172,7 +180,6 @@
                 total += coffeeOrder.itemPrice()*quantity;
                 round();
                 runningTotal.setText(total + "");
-
         }
 
         /**
@@ -251,6 +258,8 @@
                 System.out.println(DonutViewController.getTotal() + total);
                 order.setPrice(DonutViewController.getTotal() + total);
                 AllOrders.addOrder(order, uniqueOrder);
+                //this.mainController.revealPricing();
+                //setMainController(this.mainController);
                 reset();
         }
 
Index: src/main/java/projectfour/OrderingBasketController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package projectfour;\n\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.ListView;\nimport javafx.scene.control.TextArea;\nimport javafx.scene.control.TextField;\n\nimport java.text.DecimalFormat;\nimport java.util.ArrayList;\n\npublic class OrderingBasketController {\n\n    @FXML\n    private TextField subtotal;\n\n    @FXML\n    private TextField tax;\n\n    @FXML\n    private TextField amountdue;\n\n    @FXML\n    private ListView items;\n    private static double TAXRATE = .0625;\n    private static int SIZEINDEX = 1;\n    private static int OFFSETINDEX = 1;\n\n    private static int EMPTY = 1;\n    private ObservableList<String> donuts;\n\n\n\n    @FXML\n    public void revealPricing(){\n        ArrayList<Order> list = AllOrders.allOrderR();\n        double amount = round(list.get(list.size() - SIZEINDEX).getPrice());\n        subtotal.setText(amount + \"\");\n        double taxAmt = list.get(list.size() - SIZEINDEX).getPrice() * TAXRATE;\n        taxAmt = round(taxAmt);\n        tax.setText(taxAmt + \"\");\n        double finalAmt = taxAmt + list.get(list.size() - SIZEINDEX).getPrice();\n        finalAmt = round(finalAmt);\n        amountdue.setText(finalAmt + \"\");\n        ArrayList<Order> orders = AllOrders.allOrderR();\n        ArrayList<String> order = orders.get(orders.size() - SIZEINDEX).getMenuItems();\n        donuts = FXCollections.observableArrayList();\n        for(int i  = 0; i < order.size(); i++)\n            donuts.add(order.get(i));\n        items.setItems(donuts);\n    }\n    private double round(double amount){\n        DecimalFormat df = new DecimalFormat();\n        df.setMaximumFractionDigits(2);\n        df.setMinimumFractionDigits(2);\n        amount = Double.parseDouble(df.format(amount));\n        return amount;\n    }\n\n    @FXML\n    protected void onRemove(){\n        String value = (String)items.getSelectionModel().getSelectedItem();\n        if(value == null)\n            return;\n        ArrayList<Order> list = AllOrders.allOrderR();\n        list.get(list.size() - SIZEINDEX).getMenuItems().remove(value);\n        int quantity;\n        double amt=0;\n        int quantity1 = Integer.parseInt(value.substring(value.indexOf('(') + 1, value.indexOf(')')));\n        if(value.contains(\"Strawberry\") || value.contains(\"Vanilla\")\n                || value.contains(\"Blueberry\") || value.contains(\"Apple\")\n                || value.contains(\"Grape\") || value.contains(\"Passionfruit\")){\n            quantity = quantity1;\n            System.out.println(quantity);\n            Yeast yeast = new Yeast(\"Any\");\n            amt = Double.parseDouble(subtotal.getText()) - yeast.itemPrice() * quantity;\n            System.out.println(yeast.itemPrice() * quantity);\n        }\n        if(value.contains(\"French\") || value.contains(\"Original\")\n                || value.contains(\"Powder\")){\n            quantity = quantity1;\n            System.out.println(quantity);\n            DonutHole hole = new DonutHole(\"Any\");\n            amt = Double.parseDouble(subtotal.getText()) - hole.itemPrice() * quantity;\n            System.out.println(hole.itemPrice() * quantity);\n\n        }\n        if(value.contains(\"Birthday Cake\") || value.contains(\"Chocolate Cake\")\n                || value.contains(\"Cheese Cake\")){\n            quantity = quantity1;\n            System.out.println(quantity);\n            Cake cake = new Cake(\"Any\");\n            amt = Double.parseDouble(subtotal.getText()) - cake.itemPrice() * quantity;\n            System.out.println(cake.itemPrice() * quantity);\n\n        }\n        if(value.contains(\"Short\") || value.contains(\"Tall\") || value.contains(\"Grande\") || value.contains(\"Venti\")){\n            String sizeOfCoffee = value.substring(0,value.indexOf(\"(\"));\n            quantity = Integer.parseInt(value.substring(value.indexOf(\"(\") + OFFSETINDEX,\n                    value.indexOf(\")\")));\n            int numberOfAddons = Integer.parseInt(\n                    value.substring(value.indexOf(\":\") + OFFSETINDEX,value.indexOf(\".\")));\n            Coffee tempCoffee = new Coffee(sizeOfCoffee);\n            ArrayList<String> addons = new ArrayList<String>();\n            for(int i = 0; i < numberOfAddons; i++){\n                addons.add(\"\");\n            }\n            tempCoffee.addaddIn(addons);\n            amt = Double.parseDouble(subtotal.getText()) - tempCoffee.itemPrice() * quantity;\n        }\n        amt = round(amt);\n        list.get(list.size() - SIZEINDEX).setPrice(amt);\n        revealPricing();\n    }\n\n    public void initialize(){\n        revealPricing();\n    }\n\n    @FXML\n    protected void onPlaceOrder(){\n        Order order = new Order(AllOrders.getUniqueNumber());\n        System.out.println(AllOrders.getUniqueNumber());\n        System.out.println(order.getOrderNumber());\n        for(int i = 0; i < donuts.size(); i++){\n            order.addItem(donuts.get(i));\n        }\n        AllOrders.addStoreOrder(order.getOrderNumber());\n        AllOrders.allOrder = new ArrayList<>();\n        DonutViewController.setTotal(0);\n        CoffeeViewController.setTotal(0);\n        AllOrders.incrementUnique();\n        System.out.println(AllOrders.getUniqueNumber());\n        System.out.println(order.getOrderNumber());\n        reset();\n    }\n\n    private void reset(){\n        subtotal.setText(\"\");\n        tax.setText(\"\");\n        amountdue.setText(\"\");\n        donuts = FXCollections.observableArrayList();\n        items.setItems(donuts);\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/projectfour/OrderingBasketController.java b/src/main/java/projectfour/OrderingBasketController.java
--- a/src/main/java/projectfour/OrderingBasketController.java	(revision 4c3fdf2951f1ae87d8655257c9e83d23fc98d904)
+++ b/src/main/java/projectfour/OrderingBasketController.java	(date 1680578156825)
@@ -28,6 +28,9 @@
     private static int OFFSETINDEX = 1;
 
     private static int EMPTY = 1;
+
+    private static int EMPTYLIST = 0;
+
     private ObservableList<String> donuts;
 
 
@@ -35,20 +38,22 @@
     @FXML
     public void revealPricing(){
         ArrayList<Order> list = AllOrders.allOrderR();
-        double amount = round(list.get(list.size() - SIZEINDEX).getPrice());
-        subtotal.setText(amount + "");
-        double taxAmt = list.get(list.size() - SIZEINDEX).getPrice() * TAXRATE;
-        taxAmt = round(taxAmt);
-        tax.setText(taxAmt + "");
-        double finalAmt = taxAmt + list.get(list.size() - SIZEINDEX).getPrice();
-        finalAmt = round(finalAmt);
-        amountdue.setText(finalAmt + "");
-        ArrayList<Order> orders = AllOrders.allOrderR();
-        ArrayList<String> order = orders.get(orders.size() - SIZEINDEX).getMenuItems();
-        donuts = FXCollections.observableArrayList();
-        for(int i  = 0; i < order.size(); i++)
-            donuts.add(order.get(i));
-        items.setItems(donuts);
+        if(list.size() != EMPTYLIST ) {
+            double amount = round(list.get(list.size() - SIZEINDEX).getPrice());
+            subtotal.setText(amount + "");
+            double taxAmt = list.get(list.size() - SIZEINDEX).getPrice() * TAXRATE;
+            taxAmt = round(taxAmt);
+            tax.setText(taxAmt + "");
+            double finalAmt = taxAmt + list.get(list.size() - SIZEINDEX).getPrice();
+            finalAmt = round(finalAmt);
+            amountdue.setText(finalAmt + "");
+            ArrayList<Order> orders = AllOrders.allOrderR();
+            ArrayList<String> order = orders.get(orders.size() - SIZEINDEX).getMenuItems();
+            donuts = FXCollections.observableArrayList();
+            for (int i = 0; i < order.size(); i++)
+                donuts.add(order.get(i));
+            items.setItems(donuts);
+        }
     }
     private double round(double amount){
         DecimalFormat df = new DecimalFormat();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"87c095c3-db3b-4a69-8149-792cabb811f1\" name=\"Changes\" comment=\"add comments\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/projectfour/MainViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/projectfour/MainViewController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/projectfour/Order.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/projectfour/Order.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/projectfour/OrderingBasketController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/projectfour/OrderingBasketController.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2NKefHsZ6dp0XA2bj3QpjZwOLEG\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;app.teamhub.trackedBranches&quot;: &quot;1g3us7n/master&quot;,\n    &quot;last_directory_selection&quot;: &quot;C:/Users/Owner/IdeaProjects/CS_213_Project_4/src/main/resources/projectfour&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Owner/IdeaProjects/CS_213_Project_2&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\Owner\\IdeaProjects\\CS_213_Project_4\\src\\main\\resources\\projectfour\" />\n      <recent name=\"C:\\Users\\Owner\\IdeaProjects\\CS_213_Project_4\\src\\main\\java\\projectfour\" />\n      <recent name=\"C:\\Users\\Owner\\IdeaProjects\\CS_213_Project_4\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"CoffeeView\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"projectfour.CoffeeView\" />\n      <module name=\"CS_213_Project_4\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"projectfour.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"projectfour.HelloApplication\" />\n      <module name=\"CS_213_Project_4\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"projectfour.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"projectfour.Main\" />\n      <module name=\"CS_213_Project_4\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"projectfour.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"MainView\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"projectfour.MainView\" />\n      <module name=\"CS_213_Project_4\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"projectfour.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"OrderingBasketView\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"projectfour.OrderingBasketView\" />\n      <module name=\"CS_213_Project_4\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"projectfour.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.OrderingBasketView\" />\n        <item itemvalue=\"Application.CoffeeView\" />\n        <item itemvalue=\"Application.MainView\" />\n        <item itemvalue=\"Application.HelloApplication\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"87c095c3-db3b-4a69-8149-792cabb811f1\" name=\"Changes\" comment=\"\" />\n      <created>1679417304332</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1679417304332</updated>\n      <workItem from=\"1679896743896\" duration=\"2176000\" />\n      <workItem from=\"1680240933009\" duration=\"480000\" />\n      <workItem from=\"1680241583515\" duration=\"258000\" />\n      <workItem from=\"1680241928616\" duration=\"3015000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"initial commit\">\n      <created>1679417476132</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679417476132</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"setting up files\">\n      <created>1679435534498</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679435534498</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"setting up files\">\n      <created>1679435569232</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679435569232</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"basic implementation\">\n      <created>1679453530802</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679453530802</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"setup\">\n      <created>1679503156033</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679503156033</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"MainView added\">\n      <created>1679512454850</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679512454850</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"added donut functionality (small tweaks needed)\">\n      <created>1679596797814</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679596797814</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"added donut functionality (small tweaks needed)\">\n      <created>1679598877448</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679598877448</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"added ordering basket and some views (needs logic fixes)\">\n      <created>1679769485914</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679769485914</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"added files\">\n      <created>1679955150971</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679955150971</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"fixed pictures, removed exception\">\n      <created>1679975067893</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679975067893</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"completed donut(mostly)\">\n      <created>1680194025295</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680194025295</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"added error pop up for donut\">\n      <created>1680323945858</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680323945858</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"add comments\">\n      <created>1680381773786</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680381773786</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"15\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"initial commit\" />\n    <MESSAGE value=\"setting up files\" />\n    <MESSAGE value=\"basic implementation\" />\n    <MESSAGE value=\"setup\" />\n    <MESSAGE value=\"MainView added\" />\n    <MESSAGE value=\"added donut functionality (small tweaks needed)\" />\n    <MESSAGE value=\"added ordering basket and some views (needs logic fixes)\" />\n    <MESSAGE value=\"added files\" />\n    <MESSAGE value=\"fixed pictures, removed exception\" />\n    <MESSAGE value=\"completed donut(mostly)\" />\n    <MESSAGE value=\"added error pop up for donut\" />\n    <MESSAGE value=\"add comments\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add comments\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4c3fdf2951f1ae87d8655257c9e83d23fc98d904)
+++ b/.idea/workspace.xml	(date 1680636211588)
@@ -7,8 +7,9 @@
     <list default="true" id="87c095c3-db3b-4a69-8149-792cabb811f1" name="Changes" comment="add comments">
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/projectfour/CoffeeView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/projectfour/CoffeeView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/projectfour/CoffeeViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/projectfour/CoffeeViewController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/projectfour/MainViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/projectfour/MainViewController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/projectfour/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/projectfour/Order.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/projectfour/OrderingBasketController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/projectfour/OrderingBasketController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -142,6 +143,7 @@
       <workItem from="1680240933009" duration="480000" />
       <workItem from="1680241583515" duration="258000" />
       <workItem from="1680241928616" duration="3015000" />
+      <workItem from="1680577603312" duration="3978000" />
     </task>
     <task id="LOCAL-00001" summary="initial commit">
       <created>1679417476132</created>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"MavenProjectsManager\">\n    <option name=\"originalFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"corretto-17\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 4c3fdf2951f1ae87d8655257c9e83d23fc98d904)
+++ b/.idea/misc.xml	(date 1680411279026)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
